{"version":3,"sources":["Components/TodoItem/TodoItem.module.scss","Components/TodoHeader/TodoHeader.module.scss","Components/TodoApp/TodoApp.module.scss","Components/TodoList/TodoList.module.scss","Components/TodoFooter/TodoFooter.module.scss","api/api.ts","Components/TodoFooter/TodoFooter.tsx","Components/TodoHeader/TodoHeader.tsx","Components/TodoItem/TodoItem.tsx","Components/TodoList/TodoList.tsx","Components/TodoApp/TodoApp.tsx","App.tsx","index.tsx"],"names":["module","exports","BASE_URL","getTodos","a","axios","get","response","data","addTodo","title","post","userId","completed","deleteTodo","todoId","delete","changeTodoStatus","patch","TodoFooter","todos","filterTodo","removeCompleted","useState","countLeft","setCountLeft","activeFilter","setActiveFilter","useEffect","filter","todo","length","className","classes","footer","filters","type","classNames","filterBtn","onClick","clearBtn","TodoHeader","createTodo","toggleAllTodo","newTodo","setNewTodo","header","toggleAll","checked","icon","value","placeholder","onChange","e","target","onKeyDown","key","trim","TodoItem","removeTodo","toggleTodo","todoItem","checkbox","id","toggle","TodoList","todoList","TransitionGroup","map","CSSTransition","timeout","TodoApp","setTodos","visibleTodos","setVisibleTodos","handleChange","setHandleChange","fetchTodos","todosFromServer","Promise","reject","Error","todoApp","t","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17062209.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoItem\":\"TodoItem_todoItem__1kZEV\",\"delete\":\"TodoItem_delete__2CKIL\",\"completed\":\"TodoItem_completed__1Khf4\",\"checkbox\":\"TodoItem_checkbox__2LwIn\",\"toggle\":\"TodoItem_toggle__3utpf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"TodoHeader_header__3QfnN\",\"toggleAll\":\"TodoHeader_toggleAll__2q41w\",\"icon\":\"TodoHeader_icon__2iZLe\",\"newTodo\":\"TodoHeader_newTodo__2c_Ik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TodoApp_title__2ZugT\",\"todoApp\":\"TodoApp_todoApp__2KDec\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"TodoList_todoList__3K816\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"TodoFooter_footer__3O1FP\",\"filters\":\"TodoFooter_filters__2R9Ww\",\"filterBtn\":\"TodoFooter_filterBtn__33aXq\",\"activeFilter\":\"TodoFooter_activeFilter__2Emmg\",\"clearBtn\":\"TodoFooter_clearBtn__3_Azh\"};","import axios from \"axios\";\nimport { Todo } from \"../types/Todo\";\n\nconst BASE_URL = 'https://mate.academy/students-api';\n\nexport const getTodos = async () => {\n  const response = await axios.get(`${BASE_URL}/todos?userId=7777`);\n\n  return response.data;\n};\n\nexport const addTodo = async (title: Todo['title']) => {\n  return await axios.post(`${BASE_URL}/todos`, {\n    userId: 7777,\n    title,\n    completed: false,\n  });\n};\n\nexport const deleteTodo = (todoId: Todo['id']) => {\n  return axios.delete(`${BASE_URL}/todos/${todoId}`);\n};\n\nexport const changeTodoStatus = (todoId: Todo['id'], completed: Todo['completed']) => {\n  return axios.patch(`${BASE_URL}/todos/${todoId}`, { completed });\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\nimport classes from './TodoFooter.module.scss';\n\ntype Props = {\n  todos: Todo[],\n  filterTodo: (value: string) => void,\n  removeCompleted: () => void,\n};\n\nexport const TodoFooter:React.FC<Props> = ({ todos, filterTodo, removeCompleted }) => {\n  const [countLeft, setCountLeft] = useState(0);\n  const [activeFilter, setActiveFilter] = useState('All');\n\n  useEffect(() => {\n    setCountLeft(todos.filter(todo => !todo.completed).length);\n  }, [todos])\n\n  useEffect(() => {\n    filterTodo(activeFilter);\n  }, [activeFilter]);\n\n  return (\n    <div className={classes.footer}>\n      <span>\n        {!!countLeft && `${countLeft} items left`}\n      </span>\n      <div className={classes.filters}>\n        <button\n          type='button'\n          className={classNames(classes.filterBtn, {\n            [classes.activeFilter]: activeFilter === 'All',\n          })}\n          onClick={() => setActiveFilter('All')}\n        >\n          All\n        </button>\n        <button\n          type='button'\n          className={classNames(classes.filterBtn, {\n            [classes.activeFilter]: activeFilter === 'Active',\n          })}\n          onClick={() => setActiveFilter('Active')}\n        >\n          Active\n        </button>\n        <button\n          type='button'\n          className={classNames(classes.filterBtn, {\n            [classes.activeFilter]: activeFilter === 'Completed',\n          })}\n          onClick={() => setActiveFilter('Completed')}\n        >\n          Completed\n        </button>\n      </div>\n      {countLeft !== todos.length && (\n        <button\n          type='button'\n          className={classes.clearBtn}\n          onClick={removeCompleted}\n        >\n          Clear completed\n        </button>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Todo } from \"../../types/Todo\";\n\nimport classes from './TodoHeader.module.scss';\n\ntype Props = {\n  createTodo: (title: Todo['title']) => void,\n  toggleAllTodo: () => void,\n  todos: Todo[],\n};\n\nexport const TodoHeader: React.FC<Props> = ({ createTodo, todos, toggleAllTodo }) => {\n  const [newTodo, setNewTodo] = useState('');\n\n  return (\n    <div className={classes.header}>\n      {!!todos.length && (\n        <label className={classes.toggleAll}>\n          <input\n            type=\"checkbox\"\n            onClick={toggleAllTodo}\n            checked={todos.filter(todo => todo.completed).length === todos.length}\n          />\n          <span className={classes.icon}>❯</span>\n        </label>\n      )}\n      <input\n        type=\"text\"\n        value={newTodo}\n        className={classes.newTodo}\n        placeholder=\"What needs to be done?\"\n        onChange={e => setNewTodo(e.target.value)}\n        onKeyDown={e => {\n          if (e.key !== 'Enter') return;\n          if (!newTodo.trim().length) return;\n\n          createTodo(newTodo);\n          setNewTodo('');\n        }}\n      />\n    </div>\n  )\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\nimport classes from './TodoItem.module.scss';\n\ntype Props = {\n  todo: Todo,\n  removeTodo: (todoId: Todo['id']) => void,\n  toggleTodo: (todoId: Todo['id'], completed: Todo['completed']) => void,\n};\n\nexport const TodoItem:React.FC<Props> = ({ todo, removeTodo, toggleTodo }) => {\n  return (\n    <li className={classNames(classes.todoItem, {\n      [classes.completed]: todo.completed,\n    })}>\n      <label className={classes.checkbox}>\n        <input\n          type=\"checkbox\"\n          checked={todo.completed}\n          onChange={() => toggleTodo(todo.id, !todo.completed)}\n        />\n        <div className={classes.toggle} />\n      </label>\n      {todo.title}\n      <button\n        type='button'\n        className={classes.delete}\n        onClick={() => removeTodo(todo.id)}\n      >\n        x\n      </button>\n    </li>\n  )\n};\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nimport classes from './TodoList.module.scss';\nimport './Animate.scss';\n\ntype Props = {\n  todos: Todo[],\n  removeTodo: (todoId: Todo['id']) => void,\n  toggleTodo: (todoId: Todo['id'], completed: Todo['completed']) => void,\n};\n\nexport const TodoList:React.FC<Props> = ({ todos, removeTodo, toggleTodo }) => {\n  return (\n    <ul className={classes.todoList}>\n      <TransitionGroup className=\"todo-list\">\n        {todos.map(todo => (\n          <CSSTransition\n            key={todo.id}\n            timeout={500}\n            classNames=\"item\"\n          >\n            <TodoItem todo={todo} removeTodo={removeTodo} toggleTodo={toggleTodo} />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { addTodo, changeTodoStatus, deleteTodo, getTodos } from \"../../api/api\";\nimport { Todo } from \"../../types/Todo\";\nimport { TodoFooter } from \"../TodoFooter/TodoFooter\";\nimport { TodoHeader } from \"../TodoHeader/TodoHeader\";\nimport { TodoList } from \"../TodoList/TodoList\";\n\nimport classes from './TodoApp.module.scss';\n\nexport const TodoApp:React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [handleChange, setHandleChange] = useState(false);\n\n  const fetchTodos = async () => {\n    try {\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n      setVisibleTodos(todosFromServer);\n    } catch {\n      Promise.reject(new Error('error'));\n    };\n  };\n\n  const filterTodo = (value: string) => {\n    switch(value) {\n      case 'Active':\n        setVisibleTodos([...todos].filter(todo => !todo.completed));\n        break;\n      case 'Completed':\n        setVisibleTodos([...todos].filter(todo => todo.completed));\n        break;\n      default:\n        setVisibleTodos([...todos]);\n        break;\n    }\n  }\n\n  const createTodo = async (title: Todo['title']) => {\n    await addTodo(title);\n    setHandleChange(!handleChange);\n  };\n\n  const toggleTodo = async (todoId: Todo['id'], completed: Todo['completed']) => {\n    await changeTodoStatus(todoId, completed);\n    setHandleChange(!handleChange);\n  };\n\n  const toggleAllTodo = () => {\n    if (todos.filter(todo => !todo.completed).length === 0) {\n      todos.map(todo => toggleTodo(todo.id, false));\n    } else {\n      todos.map(todo => toggleTodo(todo.id, true));\n    }\n  };\n\n  const removeTodo = async (todoId: Todo['id']) => {\n    await deleteTodo(todoId);\n    setHandleChange(!handleChange);\n  };\n\n  const removeCompleted = () => {\n    todos.filter(todo => todo.completed).map(t => {\n      return deleteTodo(t.id);\n    });\n    setHandleChange(!handleChange);\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, [handleChange]);\n\n  return (\n    <>\n      <h1 className={classes.title}>todos</h1>\n      <div className={classes.todoApp}>\n        <TodoHeader todos={todos} createTodo={createTodo} toggleAllTodo={toggleAllTodo} />\n        <TodoList todos={visibleTodos} toggleTodo={toggleTodo} removeTodo={removeTodo} />\n        {!!todos.length && (\n          <TodoFooter todos={visibleTodos} filterTodo={filterTodo} removeCompleted={removeCompleted} />\n        )}\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { TodoApp } from './Components/TodoApp/TodoApp';\n\nconst App:React.FC = () => {\n  return (\n    <TodoApp />\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}